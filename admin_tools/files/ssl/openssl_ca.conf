
[ ca ]
# Cette section permet de définir l'autorité de certification par défaut.
default_ca		= CA_default

[ CA_default ]
dir				= /etc/ssl/default_private_ca		# Where everything is kept
serial			= /etc/ssl/default_private_ca/serial
database		= /etc/ssl/default_private_ca/index.txt
new_certs_dir	= $dir/newcerts
certificate		= /etc/ssl/default_private_ca/ca_cert.pem
private_key		= /etc/ssl/default_private_ca/ca_key.pem
default_days	= 3650
default_md		= sha256
preserve		= no
email_in_dn		= no
nameopt			= default_ca
certopt			= default_ca
policy			= policy_match

[ policy_match ]
countryName		= match
stateOrProvinceName	= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

[ policy_anything ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

# Les sections [ req ] et [ req_distinguished_name ] définissent les paramètres par défaut pour la création d'un certificat ssl : 
[ req ]
default_bits		= 2048
default_md			= sha256
default_keyfile 	= key.pem
distinguished_name	= req_distinguished_name
attributes		= req_attributes
x509_extensions		= v3_ca	# The extentions to add to the self signed cert
# This sets a mask for permitted string types. There are several options. 
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString.
# utf8only: only UTF8Strings.
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: current versions of Netscape crash on BMPStrings or UTF8Strings
# so use this option with caution!
# we use PrintableString+UTF8String mask so if pure ASCII texts are used
# the resulting certificates are compatible with Netscape
#string_mask = MASK:0x2002

req_extensions = v3_req # The extensions to add to a certificate request

[ req_distinguished_name ]
countryName				= Country Name (2 letter code)
countryName_default		= FR
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= Rhone

localityName			= Locality Name (eg, city)
localityName_default		= Lyon

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= Syscom

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= IT

commonName			= Common Name (eg, your name or your server\'s hostname)
commonName_max			= 64

emailAddress			= Email Address
emailAddress_max		= 64


[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 4
challengePassword_max		= 20
unstructuredName		= An optional company name


[ v3_req ]

# Extensions to add to a certificate request
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectKeyIdentifier    = hash 

[ v3_ca ]

# Extensions for a typical CA
# PKIX recommendation.

basicConstraints = CA:TRUE
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always


# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
# keyUsage = cRLSign, keyCertSign

# Some might want this also
# nsCertType = sslCA, emailCA

# Include email address in subject alt name: another PKIX recommendation
# subjectAltName=email:copy
# Copy issuer details
# issuerAltName=issuer:copy

# DER hex encoding of an extension: beware experts only!
# obj=DER:02:03
# Where 'obj' is a standard or added object
# You can even override a supported extension:
# basicConstraints= critical, DER:30:03:01:01:FF